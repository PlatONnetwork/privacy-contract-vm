/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
#define JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_

#include <jsonrpccpp/server.h>

class AbstractStubServer : public jsonrpc::AbstractServer<AbstractStubServer>
{
    public:
        AbstractStubServer(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<AbstractStubServer>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("eth_call", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, "param01",jsonrpc::JSON_OBJECT,"param02",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::eth_callI);
            this->bindAndAddMethod(jsonrpc::Procedure("eth_getTransactionCount", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, "param01",jsonrpc::JSON_STRING,"param02",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::eth_getTransactionCountI);
            this->bindAndAddMethod(jsonrpc::Procedure("eth_sendRawTransaction", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, "param01",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::eth_sendRawTransactionI);
            this->bindAndAddMethod(jsonrpc::Procedure("eth_getTransactionReceipt", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_OBJECT, "param01",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::eth_getTransactionReceiptI);
            this->bindAndAddMethod(jsonrpc::Procedure("eth_setActor", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, "param01",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::eth_setActorI);
        }

        inline virtual void eth_callI(const Json::Value &request, Json::Value &response)
        {
            response = this->eth_call(request[0u], request[1u].asString());
        }
        inline virtual void eth_getTransactionCountI(const Json::Value &request, Json::Value &response)
        {
            response = this->eth_getTransactionCount(request[0u].asString(), request[1u].asString());
        }
        inline virtual void eth_sendRawTransactionI(const Json::Value &request, Json::Value &response)
        {
            response = this->eth_sendRawTransaction(request[0u].asString());
        }
        inline virtual void eth_getTransactionReceiptI(const Json::Value &request, Json::Value &response)
        {
            response = this->eth_getTransactionReceipt(request[0u].asString());
        }
        inline virtual void eth_setActorI(const Json::Value &request, Json::Value &response)
        {
            response = this->eth_setActor(request[0u].asString());
        }
        virtual std::string eth_call(const Json::Value& param01, const std::string& param02) = 0;
        virtual std::string eth_getTransactionCount(const std::string& param01, const std::string& param02) = 0;
        virtual std::string eth_sendRawTransaction(const std::string& param01) = 0;
        virtual Json::Value eth_getTransactionReceipt(const std::string& param01) = 0;
        virtual std::string eth_setActor(const std::string& param01) = 0;
};

#endif //JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
